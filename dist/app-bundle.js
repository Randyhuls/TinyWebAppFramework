!function(e){var t={};function i(o){if(t[o])return t[o].exports;var a=t[o]={i:o,l:!1,exports:{}};return e[o].call(a.exports,a,a.exports,i),a.l=!0,a.exports}i.m=e,i.c=t,i.d=function(e,t,o){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(i.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)i.d(o,a,function(t){return e[t]}.bind(null,a));return o},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=2)}([function(e,t){e.exports="<div id=HomeViewController> <h1>Home</h1> <article> <p>This is the home page. This is the landing page of the app</p> </article> </div>"},function(e,t){e.exports="<div id=ProfileViewController> <h1>Profile</h1> <article> <p>This is the profile page. This is where you show detailed information about the app</p> </article> </div>"},function(e,t,i){"use strict";i.r(t);class o{static generateId(){function e(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+"-"+(new Date).getTime()}}const a={DISMISS_VIEWCONTROLLER:"dismissviewcontroller"};class l{constructor(e,t,{transitionStyle:i,isModal:l,delegateData:n}){let r=(new DOMParser).parseFromString(t,"text/html").body.firstElementChild;r.classList.add("ViewController"),l&&r.classList.add("Modal"),this.view=r,this.displayName=e,this.id=`vc-instance-${o.generateId()}`,this.transitionStyle=i,this.delegateData=n||{},this.delegateEvent=new CustomEvent(a.DISMISS_VIEWCONTROLLER,{detail:this.delegateData})}viewWillLoad(){}viewDidAppear(){}viewDidLoad(){}viewWillUnload(){}viewDidUnload(){this.view.dispatchEvent(this.delegateEvent)}onDismiss(e){e instanceof Function&&this.view.addEventListener(a.DISMISS_VIEWCONTROLLER,e.bind(this))}}class n{static setClassWithAnimation(e,t,i,o){i?(e.classList.remove(t),e.offsetWidth,e.style.animationDirection="reverse",e.classList.add(t)):e.classList.add(t);let a=window.getComputedStyle(e),l=1e3*parseFloat(a.animationDuration||a.transitionDuration||0);setTimeout(o,l)}}const r={ROOT_VIEW:"#RootView",NAVIGATION_BAR_VIEW:"#NavigationBarView",NAVIGATION_BACK_BTN:"#BackButton",NAVIGATION_TITLE:"#NavigationBarView .NavigationBarItem.CenterBarItem .Title",NAVIGATION_LEFT_BAR_ITEM:"#NavigationBarView .NavigationBarItem.LeftBarItem",NAVIGATION_RIGHT_BAR_ITEM:"#NavigationBarView .NavigationBarItem.RightBarItem",NAVIGATION_CENTER_BAR_ITEM:"#NavigationBarView .NavigationBarItem.CenterBarItem",NAVIGATION_BAR_ITEM:"#NavigationBarView .NavigationBarItem",NAVIGATION_BAR_ITEM_BTN:"#NavigationBarView .NavigationBarItem .BarItemButton"},s={NONE:"",HORIZONTAL:"transition-horizontal",VERTICAL:"transition-vertical"},d={stack:[],activeViewController:null,dequeuedViewController:null},c={LEFT:"LeftBarItem",RIGHT:"RightBarItem",CENTER:"CenterBarItem"};class v{get currentContext(){return this._currentContext}set currentContext(e){this._currentContext=e}static setNavigationBarItem(e,{currentContext:t}){switch(t&&(this.currentContext=t),e.type){case c.LEFT:document.querySelector(r.NAVIGATION_LEFT_BAR_ITEM).appendChild(e.view).classList.add("active");break;case c.RIGHT:document.querySelector(r.NAVIGATION_RIGHT_BAR_ITEM).appendChild(e.view).classList.add("active");break;case c.CENTER:document.querySelector(r.NAVIGATION_CENTER_BAR_ITEM).appendChild(e.view).classList.add("active")}}static resetNavigationBarItems(){Array.from(document.querySelectorAll(r.NAVIGATION_BAR_ITEM)).forEach(e=>{let t=e.querySelector(r.NAVIGATION_BAR_ITEM_BTN);t&&e.removeChild(t)})}static createBarItem({title:e,imgPath:t,type:i,handler:o}){if(!e||!t&&!i&&!o)throw"NavigationBarItem.create --\x3e Missing parameters in navigation bar item";let a={},l=document.createElement("button");if(l.classList.add("BarItemButton"),e)l.innerHTML=e,a.title=e;else if(t){let e=document.createElement("img");e.src=t,l.appendChild(e),a.icon=e}return l.onclick=o.bind(this),a.view=l,a.type=i,a.handler=o,a}}class w{static get allowBackNavigation(){return this._allowBackNavigation}static set allowBackNavigation(e){let t=document.querySelector(r.NAVIGATION_BACK_BTN);e?t.onclick=(()=>{w.dismissViewController(),w.updateNavigationBar()}):t.classList.remove("active"),this._allowBackNavigation=e}static set setRootViewController(e){if(!e instanceof l)return;let t=d.activeViewController,i=document.querySelector(r.ROOT_VIEW);d.stack.forEach(e=>{e.view!==t.view&&i.removeChild(e.view)}),e.displayName!==t.displayName&&i.insertBefore(e.view,t.view),d.stack=e.displayName===t.displayName?[t]:[e,t],w.updateNavigationBar(),console.log("Root view controller --\x3e",e.displayName)}static presentViewController(e,{transitionStyle:t}){!e instanceof l||(this.setTransitionStyle(e,t),e.viewWillLoad(),this.initiateNavigation(e,{shouldPop:!1},()=>{w.updateNavigationBar(),console.log("Active view controller --\x3e",d.activeViewController.displayName)}))}static dismissViewController(e){let t=this,i=!!e;!function o(a){!a instanceof l||t.initiateNavigation(a,{shouldPop:!0},()=>{t.updateNavigationBar(),i&&(d.activeViewController.id===e.id?console.log("dismissViewController --\x3e Popped to "+d.activeViewController.displayName):(a.transitionStyle||(a.transitionStyle=s.HORIZONTAL),o(d.activeViewController)))})}(d.activeViewController)}static setTransitionStyle(e,t){0===d.stack.length?e.transitionStyle=s.NONE:e.transitionStyle=t||s.HORIZONTAL}static addToStack(e){let t=d.stack;t.push(e),d.activeViewController=t[t.length-1],this.addToDOM(d.activeViewController)}static removeFromStack(){let e=d.stack;1!==e.length&&(d.dequeuedViewController=d.activeViewController,e.pop(),this.removeFromDOM(d.activeViewController),d.activeViewController=e[e.length-1])}static initiateNavigation(e,{shouldPop:t},i){let o="";switch(e.transitionStyle){case s.NONE:o=s.NONE;break;case s.HORIZONTAL:o=s.HORIZONTAL;break;case s.VERTICAL:o=s.VERTICAL}t||(this.addToStack(e),e=d.activeViewController),o===s.NONE?(t&&this.removeFromStack(),i()):n.setClassWithAnimation(e.view,o,t,()=>{t&&this.removeFromStack(),i()})}static setBackButton(){let e=document.querySelector(r.NAVIGATION_BACK_BTN);if(d.stack.length>1){let t=d.stack[d.stack.length-2];e.innerHTML=t.displayName,e.classList.add("active")}else e.classList.remove("active")}static updateNavigationBar(){let e=document.querySelector(r.NAVIGATION_BAR_VIEW).querySelector(r.NAVIGATION_TITLE);w.allowBackNavigation&&this.setBackButton(),e.innerHTML=d.activeViewController.displayName}static removeFromDOM(e){document.querySelector(r.ROOT_VIEW).removeChild(e.view),console.log(`Removed viewcontroller ${e.displayName} from DOM`)}static addToDOM(e){document.querySelector(r.ROOT_VIEW).appendChild(e.view),console.log(`Added viewcontroller ${e.displayName} to DOM`)}}var p=i(0);var u=i(1);class h extends l{constructor(){super("Profile",u,{delegateData:{DataPassedByProfile:"SomeTestObject"}})}viewDidAppear(){super.viewDidAppear(),console.log("ProfileViewController.viewDidAppear --\x3e The view did appear")}viewWillLoad(){super.viewWillLoad(),console.log("ProfileViewController.viewWillLoad --\x3e The view is about to load")}viewDidLoad(){super.viewDidLoad(),console.log("ProfileViewController.viewDidLoad --\x3e The view has finished loading")}viewWillUnload(){super.viewWillUnload(),console.log("ProfileViewController.viewWillUnload --\x3e The view will unload from the rootview")}viewDidUnload(){super.viewDidUnload(),console.log("ProfileViewController.viewDidUnload --\x3e The view was unloaded from the rootview")}}new class extends class{constructor(){let e=document.querySelector("#RootView");new MutationObserver(e=>{e.forEach(e=>this.applicationRootViewDidChange(e))}).observe(e,{childList:!0,subtree:!0}),window.addEventListener("DOMContentLoaded",this.applicationWillLoad.bind(this)),window.addEventListener("load",this.applicationDidLoad.bind(this)),window.addEventListener("beforeunload",this.applicationWillUnload.bind(this)),window.addEventListener("unload",this.applicationDidUnload.bind(this)),w.allowBackNavigation=!0}applicationRootViewDidChange(e){let t=Array.from(e.addedNodes),i=Array.from(e.removedNodes),o=d.stack[d.stack.length-2];t.includes(d.activeViewController.view)&&(o&&(v.currentContext&&v.resetNavigationBarItems(),o.viewWillUnload()),d.activeViewController.viewDidLoad(),d.activeViewController.viewDidAppear()),!!i.filter(e=>e.classList.contains("ViewController")).length>0&&(d.dequeuedViewController.viewDidUnload(),d.activeViewController.viewDidAppear())}applicationWillLoad(){}applicationDidLoad(){}applicationWillUnload(){}applicationDidUnload(){}}{applicationWillLoad(){super.applicationWillLoad(),console.log("applicationWillLoad --\x3e The application is about to load")}applicationDidLoad(){super.applicationDidLoad(),console.log("applicationDidLoad --\x3e The application has finished loading"),w.presentViewController(new class extends l{constructor(){super("Home",p,{})}viewDidAppear(){super.viewDidAppear(),console.log("HomeViewController.viewDidAppear --\x3e The view did appear");let e=new h;e.onDismiss(e=>{console.log("data",e.detail)});let t=v.createBarItem({title:"See more",type:c.RIGHT,handler:()=>w.presentViewController(e,{})});v.setNavigationBarItem(t,{currentContext:!0})}viewWillLoad(){super.viewWillLoad(),console.log("HomeViewController.viewWillLoad --\x3e The view is about to load")}viewDidLoad(){super.viewDidLoad(),console.log("HomeViewController.viewDidLoad --\x3e The view has finished loading")}viewWillUnload(){super.viewWillUnload(),console.log("HomeViewController.viewWillUnload --\x3e The view will unload from the rootview")}viewDidUnload(){super.viewDidUnload(),console.log("HomeViewController.viewDidUnload --\x3e The view was unloaded from the rootview")}},{})}}}]);