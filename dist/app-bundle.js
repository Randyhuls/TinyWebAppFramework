!function(e){var i={};function t(o){if(i[o])return i[o].exports;var a=i[o]={i:o,l:!1,exports:{}};return e[o].call(a.exports,a,a.exports,t),a.l=!0,a.exports}t.m=e,t.c=i,t.d=function(e,i,o){t.o(e,i)||Object.defineProperty(e,i,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,i){if(1&i&&(e=t(e)),8&i)return e;if(4&i&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&i&&"string"!=typeof e)for(var a in e)t.d(o,a,function(i){return e[i]}.bind(null,a));return o},t.n=function(e){var i=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(i,"a",i),i},t.o=function(e,i){return Object.prototype.hasOwnProperty.call(e,i)},t.p="",t(t.s=2)}([function(e,i){e.exports="<div id=HomeViewController> <h1>Home</h1> <article> <p>This is the home page. This is the landing page of the app</p> </article> </div>"},function(e,i){e.exports="<div id=ProfileViewController> <h1>Profile</h1> <article> <p>This is the profile page. This is where you show detailed information about the app</p> </article> </div>"},function(e,i,t){"use strict";t.r(i);class o{constructor(e,i,t){let o=(new DOMParser).parseFromString(i,"text/html").querySelector("body").firstElementChild;o.classList.add("ViewController"),this.view=o,this.displayName=e,this.transitionStyle=t,this.viewWillLoad()}viewWillLoad(){}viewDidAppear(){}viewDidLoad(){}viewWillUnload(){}viewDidUnload(){}}class a{static setClassWithAnimation(e,i,t,o){t?(e.classList.remove(i),e.offsetWidth,e.style.animationDirection="reverse",e.classList.add(i)):e.classList.add(i);let a=window.getComputedStyle(e),l=1e3*parseFloat(a.animationDuration||a.transitionDuration||0);setTimeout(o,l)}}const l={ROOT_VIEW:"#RootView",NAVIGATION_BAR_VIEW:"#NavigationBarView",NAVIGATION_BACK_BTN:"#BackButton",NAVIGATION_TITLE:"#NavigationBarView .NavigationBarItem.CenterBarItem .Title",NAVIGATION_LEFT_BAR_ITEM:"#NavigationBarView .NavigationBarItem.LeftBarItem",NAVIGATION_RIGHT_BAR_ITEM:"#NavigationBarView .NavigationBarItem.RightBarItem",NAVIGATION_CENTER_BAR_ITEM:"#NavigationBarView .NavigationBarItem.CenterBarItem",NAVIGATION_BAR_ITEM:"#NavigationBarView .NavigationBarItem",NAVIGATION_BAR_ITEM_BTN:"#NavigationBarView .NavigationBarItem .BarItemButton"},r={NONE:"",HORIZONTAL:"transition-horizontal",VERTICAL:"transition-vertical"},n={stack:[],activeViewController:null,dequeuedViewController:null},s={LEFT:"LeftBarItem",RIGHT:"RightBarItem",CENTER:"CenterBarItem"};class d{get currentContext(){return this._currentContext}set currentContext(e){this._currentContext=e}static setNavigationBarItem(e,{currentContext:i}){switch(i&&(this.currentContext=i),e.type){case s.LEFT:document.querySelector(l.NAVIGATION_LEFT_BAR_ITEM).appendChild(e.view).classList.add("active");break;case s.RIGHT:document.querySelector(l.NAVIGATION_RIGHT_BAR_ITEM).appendChild(e.view).classList.add("active");break;case s.CENTER:document.querySelector(l.NAVIGATION_CENTER_BAR_ITEM).appendChild(e.view).classList.add("active")}}static resetNavigationBarItems(){Array.from(document.querySelectorAll(l.NAVIGATION_BAR_ITEM)).forEach(e=>{let i=e.querySelector(l.NAVIGATION_BAR_ITEM_BTN);i&&e.removeChild(i)})}static createBarItem({title:e,imgPath:i,type:t,handler:o}){if(!e||!i&&!t&&!o)throw"NavigationBarItem.create --\x3e Missing parameters in navigation bar item";let a={},l=document.createElement("button");if(l.classList.add("BarItemButton"),e)l.innerHTML=e,a.title=e;else if(i){let e=document.createElement("img");e.src=i,l.appendChild(e),a.icon=e}return l.onclick=o.bind(this),a.view=l,a.type=t,a.handler=o,a}}class c{static get allowBackNavigation(){return this._allowBackNavigation}static set allowBackNavigation(e){let i=document.querySelector(l.NAVIGATION_RIGHT_BAR_ITEM),t=document.querySelector(l.NAVIGATION_BACK_BTN);e?t.onclick=(()=>{c.dismissViewController(),c.updateNavigationBar()}):i.removeChild(t),this._allowBackNavigation=e}static set setRootViewController(e){!e instanceof o&&(e=new e);let i=n.activeViewController,t=document.querySelector(l.ROOT_VIEW);n.stack.forEach(e=>{e.view!==i.view&&t.removeChild(e.view)}),e.displayName!==i.displayName&&t.insertBefore(e.view,i.view),n.stack=e.displayName===i.displayName?[i]:[e,i],c.updateNavigationBar(),console.log("Root view controller --\x3e",e.displayName)}static presentViewController(e,{transitionStyle:i}){!(e=new e)instanceof o||(this.setTransitionStyle(e,i),this.initiateNavigation(e,{shouldPop:!1},()=>{c.updateNavigationBar(),console.log("Active view controller --\x3e",n.activeViewController.displayName)}))}static dismissViewController(e){let i=this,t=!!e;!function a(l){!l instanceof o||i.initiateNavigation(l,{shouldPop:!0},()=>{i.updateNavigationBar(),t&&(n.activeViewController.displayName===e.displayName?console.log("dismissViewController --\x3e Popped to "+n.activeViewController.displayName):(l.transitionStyle||(l.transitionStyle=r.HORIZONTAL),a(n.activeViewController)))})}(n.activeViewController)}static setTransitionStyle(e,i){0===n.stack.length?e.transitionStyle=r.NONE:e.transitionStyle=i||r.HORIZONTAL}static addToStack(e){let i=n.stack;i.push(e),n.activeViewController=i[i.length-1],this.addToDOM(n.activeViewController)}static removeFromStack(){let e=n.stack;1!==e.length&&(n.dequeuedViewController=n.activeViewController,e.pop(),this.removeFromDOM(n.activeViewController),n.activeViewController=e[e.length-1])}static initiateNavigation(e,{shouldPop:i},t){let o="";switch(e.transitionStyle){case r.NONE:o=r.NONE;break;case r.HORIZONTAL:o=r.HORIZONTAL;break;case r.VERTICAL:o=r.VERTICAL}i||(this.addToStack(e),e=n.activeViewController),o===r.NONE?(i&&this.removeFromStack(),t()):a.setClassWithAnimation(e.view,o,i,()=>{i&&this.removeFromStack(),t()})}static setBackButton(){let e=document.querySelector(l.NAVIGATION_BACK_BTN);if(n.stack.length>1){let i=n.stack[n.stack.length-2];e.innerHTML=i.displayName,e.classList.add("active")}else e.classList.remove("active")}static updateNavigationBar(){let e=document.querySelector(l.NAVIGATION_BAR_VIEW).querySelector(l.NAVIGATION_TITLE);c.allowBackNavigation&&this.setBackButton(),e.innerHTML=n.activeViewController.displayName}static removeFromDOM(e){document.querySelector(l.ROOT_VIEW).removeChild(e.view),console.log(`Removed viewcontroller ${e.displayName} from DOM`)}static addToDOM(e){document.querySelector(l.ROOT_VIEW).appendChild(e.view),console.log(`Added viewcontroller ${e.displayName} to DOM`)}}var v=t(0);class w extends o{constructor(){super("Home",v)}viewDidAppear(){super.viewDidAppear(),console.log("HomeViewController.viewDidAppear --\x3e The view did appear");let e=d.createBarItem({title:"See more",type:s.RIGHT,handler:()=>alert("hello")});d.setNavigationBarItem(e,{currentContext:!0})}viewWillLoad(){super.viewWillLoad(),console.log("ProfileViewController.viewWillLoad --\x3e The view is about to load")}viewDidLoad(){super.viewDidLoad(),console.log("HomeViewController.viewDidLoad --\x3e The view has finished loading")}viewWillUnload(){super.viewWillUnload(),console.log("HomeViewController.viewWillUnload --\x3e The view will unload from the rootview")}viewDidUnload(){super.viewDidUnload(),console.log("HomeViewController.viewDidUnload --\x3e The view was unloaded from the rootview")}}var p=t(1);class u extends o{constructor(){super("Profile",p)}viewDidAppear(){super.viewDidAppear(),console.log("ProfileViewController.viewDidAppear --\x3e The view did appear")}viewWillLoad(){super.viewWillLoad(),console.log("ProfileViewController.viewWillLoad --\x3e The view is about to load")}viewDidLoad(){super.viewDidLoad(),console.log("ProfileViewController.viewDidLoad --\x3e The view has finished loading")}viewWillUnload(){super.viewWillUnload(),console.log("ProfileViewController.viewWillUnload --\x3e The view will unload from the rootview")}viewDidUnload(){super.viewDidUnload(),console.log("ProfileViewController.viewDidUnload --\x3e The view was unloaded from the rootview")}}new class extends class{constructor(){let e=document.querySelector("#RootView");new MutationObserver(e=>{e.forEach(e=>this.applicationRootViewDidChange(e))}).observe(e,{childList:!0,subtree:!0}),window.addEventListener("DOMContentLoaded",this.applicationWillLoad.bind(this)),window.addEventListener("load",this.applicationDidLoad.bind(this)),window.addEventListener("beforeunload",this.applicationWillUnload.bind(this)),window.addEventListener("unload",this.applicationDidUnload.bind(this)),c.allowBackNavigation=!0}applicationRootViewDidChange(e){let i=Array.from(e.addedNodes),t=Array.from(e.removedNodes),o=n.stack[n.stack.length-2];i.includes(n.activeViewController.view)&&(o&&(d.currentContext&&d.resetNavigationBarItems(),o.viewWillUnload()),n.activeViewController.viewDidLoad(),n.activeViewController.viewDidAppear()),!!t.filter(e=>e.classList.contains("ViewController")).length>0&&(n.dequeuedViewController.viewDidUnload(),n.activeViewController.viewDidAppear())}applicationWillLoad(){}applicationDidLoad(){}applicationWillUnload(){}applicationDidUnload(){}}{applicationWillLoad(){super.applicationWillLoad(),console.log("applicationWillLoad --\x3e The application is about to load")}applicationDidLoad(){super.applicationDidLoad(),console.log("applicationDidLoad --\x3e The application has finished loading"),c.presentViewController(w,{}),setTimeout(()=>c.presentViewController(u,{}),500)}}}]);